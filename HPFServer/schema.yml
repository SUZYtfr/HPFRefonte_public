openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/account/:
    post:
      operationId: api_account_create
      description: Vue de l'API de création de compte utilisateur
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountCreation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountCreation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCreation'
          description: ''
  /api/account/profile/:
    get:
      operationId: api_account_profile_retrieve
      description: Vue de l'API de gestion de compte utilisateur
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountManagement'
          description: ''
    put:
      operationId: api_account_profile_update
      description: Vue de l'API de gestion de compte utilisateur
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountManagement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountManagement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountManagement'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountManagement'
          description: ''
    patch:
      operationId: api_account_profile_partial_update
      description: Vue de l'API de gestion de compte utilisateur
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccountManagement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccountManagement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccountManagement'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountManagement'
          description: ''
    delete:
      operationId: api_account_profile_destroy
      description: Vue de l'API de gestion de compte utilisateur
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/account/token/:
    post:
      operationId: api_account_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/account/token/refresh/:
    post:
      operationId: api_account_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/categories/:
    get:
      operationId: api_categories_list
      description: Ensemble de vues de modération pour les catégories
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffCategoryList'
          description: ''
    post:
      operationId: api_categories_create
      description: Ensemble de vues de modération pour les catégories
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCategory'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: api_categories_retrieve
      description: Ensemble de vues de modération pour les catégories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this catégorie.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCategory'
          description: ''
    put:
      operationId: api_categories_update
      description: Ensemble de vues de modération pour les catégories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this catégorie.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCategory'
          description: ''
    patch:
      operationId: api_categories_partial_update
      description: Ensemble de vues de modération pour les catégories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this catégorie.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffCategory'
          description: ''
    delete:
      operationId: api_categories_destroy
      description: Ensemble de vues de modération pour les catégories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this catégorie.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/categories/{id}/order/:
    get:
      operationId: api_categories_order_retrieve
      description: Ensemble de vues de modération pour les catégories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this catégorie.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffFeatureOrder'
          description: ''
    put:
      operationId: api_categories_order_update
      description: Ensemble de vues de modération pour les catégories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this catégorie.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffFeatureOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffFeatureOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffFeatureOrder'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffFeatureOrder'
          description: ''
  /api/chapters/:
    get:
      operationId: api_chapters_list
      description: Ensemble de vues publiques pour les chapitres
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChapterList'
          description: ''
    post:
      operationId: api_chapters_create
      description: Ensemble de vues publiques pour les chapitres
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chapter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Chapter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Chapter'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapter'
          description: ''
  /api/chapters/{id}/:
    get:
      operationId: api_chapters_retrieve
      description: Ensemble de vues publiques pour les chapitres
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chapitre.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapter'
          description: ''
    put:
      operationId: api_chapters_update
      description: Ensemble de vues publiques pour les chapitres
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chapitre.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chapter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Chapter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Chapter'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapter'
          description: ''
    patch:
      operationId: api_chapters_partial_update
      description: Ensemble de vues publiques pour les chapitres
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chapitre.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChapter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChapter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChapter'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapter'
          description: ''
    delete:
      operationId: api_chapters_destroy
      description: Ensemble de vues publiques pour les chapitres
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chapitre.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/chapters/{id}/anonymous-review/:
    post:
      operationId: api_chapters_anonymous_review_create
      description: Ensemble de vues publiques pour les chapitres
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chapitre.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChapterAnonymousReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChapterAnonymousReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChapterAnonymousReview'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterAnonymousReview'
          description: ''
  /api/chapters/{id}/invalidate/:
    put:
      operationId: api_chapters_invalidate_update
      description: Invalide le chapitre
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chapitre.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chapter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Chapter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Chapter'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapter'
          description: ''
  /api/chapters/{id}/reviews/:
    get:
      operationId: api_chapters_reviews_retrieve
      description: Ensemble de vues publiques pour les chapitres
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chapitre.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterReview'
          description: ''
    post:
      operationId: api_chapters_reviews_create
      description: Ensemble de vues publiques pour les chapitres
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chapitre.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChapterReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChapterReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChapterReview'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterReview'
          description: ''
  /api/chapters/{id}/submit/:
    put:
      operationId: api_chapters_submit_update
      description: Envoie le chapitre à la modération
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chapitre.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chapter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Chapter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Chapter'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapter'
          description: ''
  /api/chapters/{id}/validate/:
    put:
      operationId: api_chapters_validate_update
      description: Valide le chapitre
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chapitre.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chapter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Chapter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Chapter'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chapter'
          description: ''
  /api/collections/:
    get:
      operationId: api_collections_list
      description: Ensemble de vues pour les séries
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionList'
          description: ''
    post:
      operationId: api_collections_create
      description: Ensemble de vues pour les séries
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
  /api/collections/{id}/:
    get:
      operationId: api_collections_retrieve
      description: Ensemble de vues pour les séries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this série.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    put:
      operationId: api_collections_update
      description: Ensemble de vues pour les séries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this série.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    patch:
      operationId: api_collections_partial_update
      description: Ensemble de vues pour les séries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this série.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    delete:
      operationId: api_collections_destroy
      description: Ensemble de vues pour les séries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this série.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/collections/{id}/anonymous-review/:
    post:
      operationId: api_collections_anonymous_review_create
      description: Ensemble de vues pour les séries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this série.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionAnonymousReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionAnonymousReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionAnonymousReview'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionAnonymousReview'
          description: ''
  /api/collections/{id}/fictions/:
    get:
      operationId: api_collections_fictions_retrieve
      description: Ensemble de vues pour les séries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this série.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionCard'
          description: ''
  /api/collections/{id}/order/:
    get:
      operationId: api_collections_order_retrieve
      description: Ensemble de vues pour les séries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this série.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionChapterOrder'
          description: ''
    put:
      operationId: api_collections_order_update
      description: Ensemble de vues pour les séries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this série.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionChapterOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionChapterOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionChapterOrder'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionChapterOrder'
          description: ''
  /api/collections/{id}/reviews/:
    get:
      operationId: api_collections_reviews_retrieve
      description: Ensemble de vues pour les séries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this série.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionReview'
          description: ''
    post:
      operationId: api_collections_reviews_create
      description: Ensemble de vues pour les séries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this série.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionReview'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionReview'
          description: ''
  /api/features/:
    get:
      operationId: api_features_list
      description: Ensemble de vues publiques pour les caractéristiques
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureList'
          description: ''
    post:
      operationId: api_features_create
      description: Ensemble de vues publiques pour les caractéristiques
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feature'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
  /api/features/{id}/:
    get:
      operationId: api_features_retrieve
      description: Ensemble de vues publiques pour les caractéristiques
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this caractéristique.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    put:
      operationId: api_features_update
      description: Ensemble de vues publiques pour les caractéristiques
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this caractéristique.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feature'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    patch:
      operationId: api_features_partial_update
      description: Ensemble de vues publiques pour les caractéristiques
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this caractéristique.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeature'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    delete:
      operationId: api_features_destroy
      description: Ensemble de vues publiques pour les caractéristiques
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this caractéristique.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/features/upsert/:
    post:
      operationId: api_features_upsert_create
      description: Traite la requête de création ou récupération de la caractéristique
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feature'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
  /api/fictions/:
    get:
      operationId: api_fictions_list
      description: Ensemble de vues pour les fictions
      parameters:
      - in: query
        name: author
        schema:
          type: string
        description: Écrite par
      - in: query
        name: excludedTags
        schema:
          type: array
          items:
            type: integer
        description: Sans les caractéristiques
        explode: true
        style: form
      - in: query
        name: featured
        schema:
          type: boolean
      - in: query
        name: finished
        schema:
          type: boolean
        description: terminée
      - in: query
        name: fromDate
        schema:
          type: string
          format: date-time
        description: Écrite après le
      - in: query
        name: includedTags
        schema:
          type: array
          items:
            type: integer
        description: Avec les caractéristiques
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: maxWords
        schema:
          type: number
        description: maximum de mots
      - in: query
        name: minWords
        schema:
          type: number
        description: minimum de mots
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: searchAuthorId
        schema:
          type: integer
        description: ID auteur
      - in: query
        name: sortBy
        schema:
          type: string
        description: trier selon
      - in: query
        name: status
        schema:
          type: integer
          title: État d'écriture
          enum:
          - 1
          - 2
          - 3
          - 4
      - in: query
        name: summary
        schema:
          type: string
        description: Le résumé contient
      - in: query
        name: title
        schema:
          type: string
        description: Le titre contient
      - in: query
        name: toDate
        schema:
          type: string
          format: date-time
        description: Écrite avant le
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFictionList'
          description: ''
    post:
      operationId: api_fictions_create
      description: Ensemble de vues pour les fictions
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fiction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fiction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Fiction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fiction'
          description: ''
  /api/fictions/{id}/:
    get:
      operationId: api_fictions_retrieve
      description: Ensemble de vues pour les fictions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fiction.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fiction'
          description: ''
    put:
      operationId: api_fictions_update
      description: Ensemble de vues pour les fictions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fiction.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fiction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fiction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Fiction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fiction'
          description: ''
    patch:
      operationId: api_fictions_partial_update
      description: Ensemble de vues pour les fictions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fiction.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFiction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFiction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFiction'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fiction'
          description: ''
  /api/fictions/{id}/anonymous-review/:
    post:
      operationId: api_fictions_anonymous_review_create
      description: Ensemble de vues pour les fictions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fiction.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FictionAnonymousReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FictionAnonymousReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FictionAnonymousReview'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionAnonymousReview'
          description: ''
  /api/fictions/{id}/authors/:
    get:
      operationId: api_fictions_authors_retrieve
      description: Ajoute
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fiction.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionExtraAuthor'
          description: ''
    put:
      operationId: api_fictions_authors_update
      description: Ajoute
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fiction.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FictionExtraAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FictionExtraAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FictionExtraAuthor'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionExtraAuthor'
          description: ''
  /api/fictions/{id}/order/:
    get:
      operationId: api_fictions_order_retrieve
      description: Ensemble de vues pour les fictions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fiction.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionChapterOrder'
          description: ''
    put:
      operationId: api_fictions_order_update
      description: Ensemble de vues pour les fictions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fiction.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FictionChapterOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FictionChapterOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FictionChapterOrder'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionChapterOrder'
          description: ''
  /api/fictions/{id}/reviews/:
    get:
      operationId: api_fictions_reviews_retrieve
      description: Ensemble de vues pour les fictions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fiction.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionReview'
          description: ''
    post:
      operationId: api_fictions_reviews_create
      description: Ensemble de vues pour les fictions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fiction.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FictionReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FictionReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FictionReview'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionReview'
          description: ''
  /api/images/banners/:
    get:
      operationId: api_images_banners_list
      description: Ensemble de vues publiques pour les bannières
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBannerList'
          description: ''
    post:
      operationId: api_images_banners_create
      description: Ensemble de vues publiques pour les bannières
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Banner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Banner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Banner'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
  /api/images/banners/{id}/:
    get:
      operationId: api_images_banners_retrieve
      description: Ensemble de vues publiques pour les bannières
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bannière.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    put:
      operationId: api_images_banners_update
      description: Ensemble de vues publiques pour les bannières
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bannière.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Banner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Banner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Banner'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    patch:
      operationId: api_images_banners_partial_update
      description: Ensemble de vues publiques pour les bannières
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bannière.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBanner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBanner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBanner'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    delete:
      operationId: api_images_banners_destroy
      description: Ensemble de vues publiques pour les bannières
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bannière.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/images/profilepictures/:
    get:
      operationId: api_images_profilepictures_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfilePictureList'
          description: ''
    post:
      operationId: api_images_profilepictures_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfilePicture'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfilePicture'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfilePicture'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilePicture'
          description: ''
  /api/images/profilepictures/{id}/:
    get:
      operationId: api_images_profilepictures_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image de profil.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilePicture'
          description: ''
    put:
      operationId: api_images_profilepictures_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image de profil.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfilePicture'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfilePicture'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfilePicture'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilePicture'
          description: ''
    patch:
      operationId: api_images_profilepictures_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image de profil.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfilePicture'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfilePicture'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfilePicture'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilePicture'
          description: ''
    delete:
      operationId: api_images_profilepictures_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image de profil.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/news/:
    get:
      operationId: api_news_list
      description: Ensemble de vues d'actualités
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNewsList'
          description: ''
    post:
      operationId: api_news_create
      description: Ensemble de vues d'actualités
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/News'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/News'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: ''
  /api/news/{news_pk}/comments/:
    get:
      operationId: api_news_comments_list
      description: Ensemble de vues de commentaires d'actualités
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: news_pk
        schema:
          type: string
        required: true
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNewsCommentList'
          description: ''
    post:
      operationId: api_news_comments_create
      description: Ensemble de vues de commentaires d'actualités
      parameters:
      - in: path
        name: news_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewsComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsComment'
          description: ''
  /api/news/{news_pk}/comments/{id}/:
    get:
      operationId: api_news_comments_retrieve
      description: Ensemble de vues de commentaires d'actualités
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this commentaire.
        required: true
      - in: path
        name: news_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsComment'
          description: ''
    put:
      operationId: api_news_comments_update
      description: Ensemble de vues de commentaires d'actualités
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this commentaire.
        required: true
      - in: path
        name: news_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewsComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsComment'
          description: ''
    patch:
      operationId: api_news_comments_partial_update
      description: Ensemble de vues de commentaires d'actualités
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this commentaire.
        required: true
      - in: path
        name: news_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNewsComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNewsComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNewsComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsComment'
          description: ''
    delete:
      operationId: api_news_comments_destroy
      description: Ensemble de vues de commentaires d'actualités
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this commentaire.
        required: true
      - in: path
        name: news_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/news/{id}/:
    get:
      operationId: api_news_retrieve
      description: Ensemble de vues d'actualités
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this actualité.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: ''
    put:
      operationId: api_news_update
      description: Ensemble de vues d'actualités
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this actualité.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/News'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/News'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: ''
    patch:
      operationId: api_news_partial_update
      description: Ensemble de vues d'actualités
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this actualité.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNews'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNews'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNews'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: ''
    delete:
      operationId: api_news_destroy
      description: Ensemble de vues d'actualités
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this actualité.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/polls/:
    get:
      operationId: api_polls_list
      description: Ensemble de vues de sondage
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPollQuestionList'
          description: ''
  /api/polls/{id}/:
    get:
      operationId: api_polls_retrieve
      description: Ensemble de vues de sondage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question de sondage.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollQuestion'
          description: ''
  /api/polls/{id}/results/:
    get:
      operationId: api_polls_results_retrieve
      description: Vue de résultats de sondage
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question de sondage.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: ''
  /api/polls/{id}/vote/:
    post:
      operationId: api_polls_vote_create
      description: Vue de création de votes
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question de sondage.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ballot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ballot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ballot'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ballot'
          description: ''
  /api/reports/chapitres/{id}/:
    post:
      operationId: api_reports_chapitres_create
      description: Vue de création de signalements
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this signalement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/reports/fictions/{id}/:
    post:
      operationId: api_reports_fictions_create
      description: Vue de création de signalements
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this signalement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/reports/membres/{id}/:
    post:
      operationId: api_reports_membres_create
      description: Vue de création de signalements
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this signalement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/reviews/chapters/:
    get:
      operationId: api_reviews_chapters_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChapterReviewList'
          description: ''
  /api/reviews/chapters/{id}/:
    get:
      operationId: api_reviews_chapters_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review de chapitre.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterReview'
          description: ''
    put:
      operationId: api_reviews_chapters_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review de chapitre.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChapterReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChapterReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChapterReview'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterReview'
          description: ''
    patch:
      operationId: api_reviews_chapters_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review de chapitre.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChapterReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChapterReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChapterReview'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterReview'
          description: ''
  /api/reviews/chapters/{review_pk}/replies/:
    get:
      operationId: api_reviews_chapters_replies_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewReplyList'
          description: ''
    post:
      operationId: api_reviews_chapters_replies_create
      parameters:
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewReply'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
  /api/reviews/chapters/{review_pk}/replies/{id}/:
    get:
      operationId: api_reviews_chapters_replies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
    put:
      operationId: api_reviews_chapters_replies_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewReply'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
    patch:
      operationId: api_reviews_chapters_replies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewReply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewReply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewReply'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
    delete:
      operationId: api_reviews_chapters_replies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/reviews/collections/:
    get:
      operationId: api_reviews_collections_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionReviewList'
          description: ''
  /api/reviews/collections/{id}/:
    get:
      operationId: api_reviews_collections_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review de série.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionReview'
          description: ''
    put:
      operationId: api_reviews_collections_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review de série.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionReview'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionReview'
          description: ''
    patch:
      operationId: api_reviews_collections_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review de série.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollectionReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollectionReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollectionReview'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionReview'
          description: ''
  /api/reviews/collections/{review_pk}/replies/:
    get:
      operationId: api_reviews_collections_replies_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewReplyList'
          description: ''
    post:
      operationId: api_reviews_collections_replies_create
      parameters:
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewReply'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
  /api/reviews/collections/{review_pk}/replies/{id}/:
    get:
      operationId: api_reviews_collections_replies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
    put:
      operationId: api_reviews_collections_replies_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewReply'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
    patch:
      operationId: api_reviews_collections_replies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewReply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewReply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewReply'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
    delete:
      operationId: api_reviews_collections_replies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/reviews/fictions/:
    get:
      operationId: api_reviews_fictions_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFictionReviewList'
          description: ''
  /api/reviews/fictions/{id}/:
    get:
      operationId: api_reviews_fictions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review de fiction.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionReview'
          description: ''
    put:
      operationId: api_reviews_fictions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review de fiction.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FictionReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FictionReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FictionReview'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionReview'
          description: ''
    patch:
      operationId: api_reviews_fictions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review de fiction.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFictionReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFictionReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFictionReview'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FictionReview'
          description: ''
  /api/reviews/fictions/{review_pk}/replies/:
    get:
      operationId: api_reviews_fictions_replies_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewReplyList'
          description: ''
    post:
      operationId: api_reviews_fictions_replies_create
      parameters:
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewReply'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
  /api/reviews/fictions/{review_pk}/replies/{id}/:
    get:
      operationId: api_reviews_fictions_replies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
    put:
      operationId: api_reviews_fictions_replies_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewReply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewReply'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
    patch:
      operationId: api_reviews_fictions_replies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewReply'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewReply'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewReply'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReply'
          description: ''
    delete:
      operationId: api_reviews_fictions_replies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/selections/:
    get:
      operationId: api_selections_list
      description: Ensemble de vues pour les sélections
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSelectionList'
          description: ''
  /api/selections/{id}/:
    get:
      operationId: api_selections_retrieve
      description: Ensemble de vues pour les sélections
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sélection.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selection'
          description: ''
  /api/selections/{id}/proposition/:
    post:
      operationId: api_selections_proposition_create
      description: Vue de création de proposition
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proposition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Proposition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Proposition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposition'
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      description: Ensemble de vues publiques pour les utilisateurs
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      description: Ensemble de vues publiques pour les utilisateurs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      description: Ensemble de vues publiques pour les utilisateurs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      description: Ensemble de vues publiques pour les utilisateurs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      description: Ensemble de vues publiques pour les utilisateurs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{id}/preferences/:
    get:
      operationId: api_users_preferences_retrieve
      description: Ensemble de vues publiques pour les utilisateurs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreferences'
          description: ''
    put:
      operationId: api_users_preferences_update
      description: Ensemble de vues publiques pour les utilisateurs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPreferences'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPreferences'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPreferences'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreferences'
          description: ''
  /api/users/{id}/profile/:
    put:
      operationId: api_users_profile_update
      description: Ensemble de vues publiques pour les utilisateurs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    AccountCreation:
      type: object
      description: Sérialiseur de création de compte utilisateur
      properties:
        id:
          type: integer
          readOnly: true
        nickname:
          type: string
          nullable: true
          title: Pseudonyme
          maxLength: 200
        email:
          type: string
          format: email
          title: Adresse e-mail
          maxLength: 200
        password:
          type: string
          writeOnly: true
          title: Mot de passe
          maxLength: 20
          minLength: 8
        profile:
          $ref: '#/components/schemas/Profile'
      required:
      - email
      - id
      - password
    AccountManagement:
      type: object
      description: Sérialiseur de gestion de compte utilisateur
      properties:
        nickname:
          type: string
          readOnly: true
          nullable: true
          title: Pseudonyme
        password:
          type: string
          writeOnly: true
          nullable: true
          title: Mot de passe
          maxLength: 20
          minLength: 8
        email:
          type: string
          format: email
          title: Adresse e-mail
          maxLength: 200
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Dernière connexion
        is_active:
          type: boolean
          readOnly: true
          title: Actif
        profile:
          $ref: '#/components/schemas/Profile'
        preferences:
          $ref: '#/components/schemas/UserPreferences'
      required:
      - email
      - is_active
      - last_login
      - nickname
      - password
    AnonymousReviewPolicyEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      type: integer
    Ballot:
      type: object
      description: Sérialiseur de bulletin de votes
      properties:
        choices:
          type: array
          items:
            type: string
            writeOnly: true
          writeOnly: true
      required:
      - choices
    Banner:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        src_path:
          type: string
          format: uri
          nullable: true
          title: Chemin de l'image
        src_link:
          type: string
          format: uri
          nullable: true
          title: URL de l'image
          maxLength: 200
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryD1bEnum'
          title: Catégorie
        is_active:
          type: boolean
          title: Bannière active
        href:
          type: string
          format: uri
          nullable: true
          title: URL du lien
          maxLength: 200
        display_text:
          type: string
          nullable: true
          title: Texte alternatif
          maxLength: 200
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        user:
          type: integer
          readOnly: true
          nullable: true
          title: Utilisateur
      required:
      - category
      - creation_date
      - creation_user
      - id
      - modification_date
      - modification_user
      - user
    Card:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        string:
          type: string
          readOnly: true
      required:
      - id
      - string
    CategoryD1bEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
    Chapter:
      type: object
      description: Sérialiseur de chapitre
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Titre
          maxLength: 250
        fiction:
          type: integer
          readOnly: true
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        startnote:
          type: string
          title: Note de début
        endnote:
          type: string
          title: Note de fin
        order:
          type: string
          readOnly: true
        validation_status:
          allOf:
          - $ref: '#/components/schemas/ValidationStatusEnum'
          readOnly: true
          title: Étape de validation
        word_count:
          type: integer
          readOnly: true
        read_count:
          type: integer
          readOnly: true
          title: Lectures
        review_count:
          type: string
          readOnly: true
        mean:
          type: integer
          readOnly: true
        poll:
          type: integer
          readOnly: true
          nullable: true
          title: Sondage
        member_review_policy:
          type: integer
          readOnly: true
        anonymous_review_policy:
          type: integer
          readOnly: true
      required:
      - anonymous_review_policy
      - creation_date
      - creation_user
      - fiction
      - id
      - mean
      - member_review_policy
      - modification_date
      - modification_user
      - order
      - poll
      - read_count
      - review_count
      - title
      - validation_status
      - word_count
    ChapterAnonymousReview:
      type: object
      properties:
        text:
          type: string
        grading:
          type: integer
          maximum: 10
          minimum: 1
          nullable: true
          title: Notation
        email:
          type: string
          format: email
          writeOnly: true
        chapter:
          type: integer
          readOnly: true
          title: Chapitre
      required:
      - chapter
      - email
      - text
    ChapterCard:
      type: object
      description: Sérialiseur de carte de chapitre
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Titre
          maxLength: 250
        order:
          type: string
          readOnly: true
      required:
      - id
      - order
      - title
    ChapterReview:
      type: object
      description: Sérialiseur publique de review
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        replies:
          type: array
          items:
            $ref: '#/components/schemas/ReviewReplyList'
        draft:
          type: boolean
          writeOnly: true
          title: Brouillon
        grading:
          type: integer
          maximum: 10
          minimum: 1
          nullable: true
          title: Notation
        creation_user:
          $ref: '#/components/schemas/UserCard'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        chapter:
          $ref: '#/components/schemas/ChapterCard'
      required:
      - chapter
      - creation_date
      - creation_user
      - id
      - modification_date
      - modification_user
      - replies
      - text
    Collection:
      type: object
      description: Sérialiseur de série
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Titre
          maxLength: 200
        summary:
          type: string
          title: Résumé
        status:
          allOf:
          - $ref: '#/components/schemas/StatusA36Enum'
          title: État
        review_count:
          type: string
          readOnly: true
        mean:
          type: string
          readOnly: true
        fiction_count:
          type: string
          readOnly: true
        creation_user:
          allOf:
          - $ref: '#/components/schemas/UserCard'
          readOnly: true
        modification_user:
          allOf:
          - $ref: '#/components/schemas/UserCard'
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
      required:
      - creation_date
      - creation_user
      - fiction_count
      - id
      - mean
      - modification_date
      - modification_user
      - review_count
      - summary
      - title
    CollectionAnonymousReview:
      type: object
      properties:
        text:
          type: string
        grading:
          type: integer
          maximum: 10
          minimum: 1
          nullable: true
          title: Notation
        email:
          type: string
          format: email
          writeOnly: true
        collection:
          type: integer
          readOnly: true
          title: Série
      required:
      - collection
      - email
      - text
    CollectionChapterOrder:
      type: object
      properties:
        order:
          type: array
          items:
            type: integer
          writeOnly: true
      required:
      - order
    CollectionReview:
      type: object
      description: Sérialiseur publique de review
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        replies:
          type: array
          items:
            $ref: '#/components/schemas/ReviewReplyList'
        draft:
          type: boolean
          writeOnly: true
          title: Brouillon
        grading:
          type: integer
          maximum: 10
          minimum: 1
          nullable: true
          title: Notation
        creation_user:
          $ref: '#/components/schemas/UserCard'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        collection:
          type: integer
          readOnly: true
          title: Série
      required:
      - collection
      - creation_date
      - creation_user
      - id
      - modification_date
      - modification_user
      - replies
      - text
    Feature:
      type: object
      description: Sérialiseur de caractéristique
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 50
        category_id:
          type: integer
          title: Catégorie
          description: Si un parent est indiqué, sa catégorie prévaut.
          readOnly: true
        parent_id:
          type: integer
          nullable: true
          readOnly: true
        description:
          type: string
          readOnly: true
          nullable: true
        order:
          type: integer
          readOnly: true
        fiction_count:
          type: integer
      required:
      - category_id
      - description
      - id
      - name
      - order
      - parent_id
    FeatureCard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        string:
          type: string
          readOnly: true
        category_id:
          type: integer
          title: Catégorie
          description: Si un parent est indiqué, sa catégorie prévaut.
          readOnly: true
      required:
      - category_id
      - id
      - string
    Fiction:
      type: object
      description: Sérialiseur privé de fiction
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Titre
          maxLength: 200
        creation_user:
          allOf:
          - $ref: '#/components/schemas/Card'
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        coauthors:
          type: array
          items:
            type: integer
            title: Co-auteurs
          readOnly: true
          title: Co-auteurs
        last_update_date:
          type: string
          format: date-time
          nullable: true
          title: Dernière mise à jour
        mean:
          type: number
          format: double
          readOnly: true
        summary:
          type: string
          title: Résumé
        storynote:
          type: string
          title: Note de fiction
        status:
          allOf:
          - $ref: '#/components/schemas/StatusD1bEnum'
          readOnly: true
          title: État d'écriture
        read_count:
          type: integer
          readOnly: true
        word_count:
          type: integer
          readOnly: true
        collection_count:
          type: integer
          readOnly: true
        featured:
          type: boolean
          readOnly: true
          title: Mise en avant
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeatureCard'
        authors:
          type: string
          readOnly: true
        series:
          type: array
          items:
            $ref: '#/components/schemas/Card'
          readOnly: true
        chapter_count:
          type: integer
          readOnly: true
        review_count:
          type: integer
          readOnly: true
        member_review_policy:
          type: integer
          readOnly: true
        anonymous_review_policy:
          type: integer
          readOnly: true
      required:
      - anonymous_review_policy
      - authors
      - chapter_count
      - coauthors
      - collection_count
      - creation_date
      - creation_user
      - featured
      - features
      - id
      - mean
      - member_review_policy
      - modification_date
      - modification_user
      - read_count
      - review_count
      - series
      - status
      - title
      - word_count
    FictionAnonymousReview:
      type: object
      properties:
        text:
          type: string
        grading:
          type: integer
          maximum: 10
          minimum: 1
          nullable: true
          title: Notation
        email:
          type: string
          format: email
          writeOnly: true
        fiction:
          type: integer
          readOnly: true
      required:
      - email
      - fiction
      - text
    FictionCard:
      type: object
      description: Sérialiseur de carte de fiction
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Titre
          maxLength: 200
      required:
      - id
      - title
    FictionChapterOrder:
      type: object
      properties:
        order:
          type: array
          items:
            type: integer
      required:
      - order
    FictionExtraAuthor:
      type: object
      description: Sérialiseur d'ajout d'auteur à une fiction
      properties:
        author_nickname:
          type: string
          writeOnly: true
        authors:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - author_nickname
      - authors
    FictionReview:
      type: object
      description: Sérialiseur publique de review
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        replies:
          type: array
          items:
            $ref: '#/components/schemas/ReviewReplyList'
        draft:
          type: boolean
          writeOnly: true
          title: Brouillon
        grading:
          type: integer
          maximum: 10
          minimum: 1
          nullable: true
          title: Notation
        creation_user:
          $ref: '#/components/schemas/UserCard'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        fiction:
          $ref: '#/components/schemas/FictionCard'
      required:
      - creation_date
      - creation_user
      - fiction
      - id
      - modification_date
      - modification_user
      - replies
      - text
    GenderEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
    MemberReviewPolicyEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      type: integer
    News:
      type: object
      description: Sérialiseur d'actualité
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Titre
          maxLength: 255
        post_date:
          type: string
          format: date-time
          nullable: true
          title: Parution
        category:
          allOf:
          - $ref: '#/components/schemas/NewsCategoryEnum'
          title: Catégorie
        status:
          allOf:
          - $ref: '#/components/schemas/StatusA36Enum'
          title: État
        content:
          type: string
          title: Contenu
        authors:
          type: array
          items:
            $ref: '#/components/schemas/NewsAuthor'
          readOnly: true
        teams:
          type: array
          items:
            $ref: '#/components/schemas/NewsTeam'
          readOnly: true
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        comments:
          type: array
          items:
            type: integer
      required:
      - authors
      - category
      - comments
      - content
      - creation_date
      - creation_user
      - id
      - modification_date
      - modification_user
      - teams
      - title
    NewsAuthor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nickname:
          type: string
          nullable: true
          title: Pseudonyme
          maxLength: 200
      required:
      - id
    NewsCategoryEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
    NewsComment:
      type: object
      description: Sérialiseur de commentaire d'actualité
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        text:
          type: string
          title: Texte
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        newsarticle:
          type: integer
          readOnly: true
          title: Actualité
      required:
      - creation_date
      - creation_user
      - id
      - modification_date
      - modification_user
      - newsarticle
      - text
    NewsTeam:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 150
      required:
      - id
      - name
    PaginatedBannerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Banner'
    PaginatedChapterList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Chapter'
    PaginatedChapterReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChapterReview'
    PaginatedCollectionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
    PaginatedCollectionReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CollectionReview'
    PaginatedFeatureList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    PaginatedFictionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Fiction'
    PaginatedFictionReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FictionReview'
    PaginatedNewsCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NewsComment'
    PaginatedNewsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/News'
    PaginatedPollQuestionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PollQuestion'
    PaginatedProfilePictureList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProfilePicture'
    PaginatedReviewReplyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReviewReply'
    PaginatedSelectionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Selection'
    PaginatedStaffCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffCategory'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedAccountManagement:
      type: object
      description: Sérialiseur de gestion de compte utilisateur
      properties:
        nickname:
          type: string
          readOnly: true
          nullable: true
          title: Pseudonyme
        password:
          type: string
          writeOnly: true
          nullable: true
          title: Mot de passe
          maxLength: 20
          minLength: 8
        email:
          type: string
          format: email
          title: Adresse e-mail
          maxLength: 200
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Dernière connexion
        is_active:
          type: boolean
          readOnly: true
          title: Actif
        profile:
          $ref: '#/components/schemas/Profile'
        preferences:
          $ref: '#/components/schemas/UserPreferences'
    PatchedBanner:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        src_path:
          type: string
          format: uri
          nullable: true
          title: Chemin de l'image
        src_link:
          type: string
          format: uri
          nullable: true
          title: URL de l'image
          maxLength: 200
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryD1bEnum'
          title: Catégorie
        is_active:
          type: boolean
          title: Bannière active
        href:
          type: string
          format: uri
          nullable: true
          title: URL du lien
          maxLength: 200
        display_text:
          type: string
          nullable: true
          title: Texte alternatif
          maxLength: 200
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        user:
          type: integer
          readOnly: true
          nullable: true
          title: Utilisateur
    PatchedChapter:
      type: object
      description: Sérialiseur de chapitre
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Titre
          maxLength: 250
        fiction:
          type: integer
          readOnly: true
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        startnote:
          type: string
          title: Note de début
        endnote:
          type: string
          title: Note de fin
        order:
          type: string
          readOnly: true
        validation_status:
          allOf:
          - $ref: '#/components/schemas/ValidationStatusEnum'
          readOnly: true
          title: Étape de validation
        word_count:
          type: integer
          readOnly: true
        read_count:
          type: integer
          readOnly: true
          title: Lectures
        review_count:
          type: string
          readOnly: true
        mean:
          type: integer
          readOnly: true
        poll:
          type: integer
          readOnly: true
          nullable: true
          title: Sondage
        member_review_policy:
          type: integer
          readOnly: true
        anonymous_review_policy:
          type: integer
          readOnly: true
    PatchedChapterReview:
      type: object
      description: Sérialiseur publique de review
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        replies:
          type: array
          items:
            $ref: '#/components/schemas/ReviewReplyList'
        draft:
          type: boolean
          writeOnly: true
          title: Brouillon
        grading:
          type: integer
          maximum: 10
          minimum: 1
          nullable: true
          title: Notation
        creation_user:
          $ref: '#/components/schemas/UserCard'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        chapter:
          $ref: '#/components/schemas/ChapterCard'
    PatchedCollection:
      type: object
      description: Sérialiseur de série
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Titre
          maxLength: 200
        summary:
          type: string
          title: Résumé
        status:
          allOf:
          - $ref: '#/components/schemas/StatusA36Enum'
          title: État
        review_count:
          type: string
          readOnly: true
        mean:
          type: string
          readOnly: true
        fiction_count:
          type: string
          readOnly: true
        creation_user:
          allOf:
          - $ref: '#/components/schemas/UserCard'
          readOnly: true
        modification_user:
          allOf:
          - $ref: '#/components/schemas/UserCard'
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
    PatchedCollectionReview:
      type: object
      description: Sérialiseur publique de review
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        replies:
          type: array
          items:
            $ref: '#/components/schemas/ReviewReplyList'
        draft:
          type: boolean
          writeOnly: true
          title: Brouillon
        grading:
          type: integer
          maximum: 10
          minimum: 1
          nullable: true
          title: Notation
        creation_user:
          $ref: '#/components/schemas/UserCard'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        collection:
          type: integer
          readOnly: true
          title: Série
    PatchedFeature:
      type: object
      description: Sérialiseur de caractéristique
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 50
        category_id:
          type: integer
          title: Catégorie
          description: Si un parent est indiqué, sa catégorie prévaut.
          readOnly: true
        parent_id:
          type: integer
          nullable: true
          readOnly: true
        description:
          type: string
          readOnly: true
          nullable: true
        order:
          type: integer
          readOnly: true
        fiction_count:
          type: integer
    PatchedFiction:
      type: object
      description: Sérialiseur privé de fiction
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Titre
          maxLength: 200
        creation_user:
          allOf:
          - $ref: '#/components/schemas/Card'
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        coauthors:
          type: array
          items:
            type: integer
            title: Co-auteurs
          readOnly: true
          title: Co-auteurs
        last_update_date:
          type: string
          format: date-time
          nullable: true
          title: Dernière mise à jour
        mean:
          type: number
          format: double
          readOnly: true
        summary:
          type: string
          title: Résumé
        storynote:
          type: string
          title: Note de fiction
        status:
          allOf:
          - $ref: '#/components/schemas/StatusD1bEnum'
          readOnly: true
          title: État d'écriture
        read_count:
          type: integer
          readOnly: true
        word_count:
          type: integer
          readOnly: true
        collection_count:
          type: integer
          readOnly: true
        featured:
          type: boolean
          readOnly: true
          title: Mise en avant
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeatureCard'
        authors:
          type: string
          readOnly: true
        series:
          type: array
          items:
            $ref: '#/components/schemas/Card'
          readOnly: true
        chapter_count:
          type: integer
          readOnly: true
        review_count:
          type: integer
          readOnly: true
        member_review_policy:
          type: integer
          readOnly: true
        anonymous_review_policy:
          type: integer
          readOnly: true
    PatchedFictionReview:
      type: object
      description: Sérialiseur publique de review
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        replies:
          type: array
          items:
            $ref: '#/components/schemas/ReviewReplyList'
        draft:
          type: boolean
          writeOnly: true
          title: Brouillon
        grading:
          type: integer
          maximum: 10
          minimum: 1
          nullable: true
          title: Notation
        creation_user:
          $ref: '#/components/schemas/UserCard'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        fiction:
          $ref: '#/components/schemas/FictionCard'
    PatchedNews:
      type: object
      description: Sérialiseur d'actualité
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Titre
          maxLength: 255
        post_date:
          type: string
          format: date-time
          nullable: true
          title: Parution
        category:
          allOf:
          - $ref: '#/components/schemas/NewsCategoryEnum'
          title: Catégorie
        status:
          allOf:
          - $ref: '#/components/schemas/StatusA36Enum'
          title: État
        content:
          type: string
          title: Contenu
        authors:
          type: array
          items:
            $ref: '#/components/schemas/NewsAuthor'
          readOnly: true
        teams:
          type: array
          items:
            $ref: '#/components/schemas/NewsTeam'
          readOnly: true
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        comments:
          type: array
          items:
            type: integer
    PatchedNewsComment:
      type: object
      description: Sérialiseur de commentaire d'actualité
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        text:
          type: string
          title: Texte
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        newsarticle:
          type: integer
          readOnly: true
          title: Actualité
    PatchedProfilePicture:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        src_path:
          type: string
          format: uri
          nullable: true
          title: Chemin de l'image
        src_link:
          type: string
          format: uri
          nullable: true
          title: URL de l'image
          maxLength: 200
        is_user_property:
          type: boolean
          title: Propriété de l'utilisateur
        is_adult_only:
          type: boolean
          title: Tout public
        credits_url:
          type: string
          format: uri
          nullable: true
          title: URL du site du propriétaire
          maxLength: 200
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        user_profile:
          type: integer
          title: Image de profil
    PatchedReviewReply:
      type: object
      description: Sérialiseur de réponse à review
      properties:
        id:
          type: integer
          readOnly: true
        creation_user:
          $ref: '#/components/schemas/UserCard'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        review:
          type: integer
          readOnly: true
          nullable: true
        text:
          type: string
          title: Texte
    PatchedStaffCategory:
      type: object
      description: Sérialiseur de catégorie pour les modérateurs
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 50
        min_limit:
          type: integer
          title: Minimum
        max_limit:
          type: integer
          nullable: true
          title: Maximum
    PatchedUser:
      type: object
      description: Sérialiseur d'utilisateur
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        stats:
          allOf:
          - $ref: '#/components/schemas/UserStats'
          readOnly: true
        first_seen:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Première apparition
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Dernière connexion
        banner:
          type: integer
          readOnly: true
    PollQuestion:
      type: object
      description: Sérialiseur de question de sondage
      properties:
        id:
          type: integer
          readOnly: true
        question_text:
          type: string
          title: Texte
          maxLength: 500
        opening_datetime:
          type: string
          format: date-time
          title: Ouverture
        closing_datetime:
          type: string
          format: date-time
          nullable: true
          title: Clôture
        members_only:
          type: boolean
          title: Réservé
        visibility:
          type: boolean
          title: Visibilité
        max_choices:
          type: integer
          title: Nombre de choix autorisé
          description: Pour les sondages de sélection, ce paramètre est ignoré.
        answers:
          type: array
          items:
            type: integer
          readOnly: true
        chapter:
          type: integer
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
      required:
      - answers
      - chapter
      - creation_date
      - creation_user
      - id
      - modification_date
      - modification_user
      - question_text
    PollResult:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        answer_text:
          type: string
          title: Texte
          maxLength: 500
        points:
          type: string
          readOnly: true
      required:
      - answer_text
      - id
      - points
    Profile:
      type: object
      properties:
        bio:
          type: string
          title: Biographie
        realname:
          type: string
          nullable: true
          title: Nom
          maxLength: 200
        birthdate:
          type: string
          format: date
          nullable: true
          title: Date de naissance
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          title: Genre
        avatar:
          $ref: '#/components/schemas/ProfilePicture'
      required:
      - avatar
    ProfilePicture:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        src_path:
          type: string
          format: uri
          nullable: true
          title: Chemin de l'image
        src_link:
          type: string
          format: uri
          nullable: true
          title: URL de l'image
          maxLength: 200
        is_user_property:
          type: boolean
          title: Propriété de l'utilisateur
        is_adult_only:
          type: boolean
          title: Tout public
        credits_url:
          type: string
          format: uri
          nullable: true
          title: URL du site du propriétaire
          maxLength: 200
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        user_profile:
          type: integer
          title: Image de profil
      required:
      - creation_date
      - creation_user
      - id
      - is_adult_only
      - is_user_property
      - modification_date
      - modification_user
      - user_profile
    Proposition:
      type: object
      properties:
        fiction:
          type: integer
      required:
      - fiction
    Report:
      type: object
      description: Sérialiseur de signalement
      properties:
        element:
          type: string
          nullable: true
          title: Élément
          maxLength: 255
        datetime:
          type: string
          format: date-time
          readOnly: true
          title: Horodatage
        argument:
          type: string
          title: Justification
        status:
          allOf:
          - $ref: '#/components/schemas/ReportStatusEnum'
          readOnly: true
          title: Statut
      required:
      - argument
      - datetime
      - status
    ReportStatusEnum:
      enum:
      - ouvert
      - traité
      - clôt
      type: string
    Result:
      type: object
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/PollResult'
          readOnly: true
      required:
      - answers
    ReviewReply:
      type: object
      description: Sérialiseur de réponse à review
      properties:
        id:
          type: integer
          readOnly: true
        creation_user:
          $ref: '#/components/schemas/UserCard'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        review:
          type: integer
          readOnly: true
          nullable: true
        text:
          type: string
          title: Texte
      required:
      - creation_date
      - creation_user
      - id
      - modification_date
      - modification_user
      - review
      - text
    ReviewReplyList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_user:
          $ref: '#/components/schemas/UserCard'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        text:
          type: string
          title: Texte
      required:
      - creation_date
      - creation_user
      - id
      - text
    Selection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Création
        modification_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Modification
        theme:
          type: string
          title: Thème
          maxLength: 50
        description:
          type: string
        open:
          type: boolean
          title: Ouverte
        creation_user:
          type: integer
          readOnly: true
          title: Créateur
        modification_user:
          type: integer
          readOnly: true
          nullable: true
          title: Modificateur
        poll:
          type: integer
          nullable: true
          title: Sondage
        fictions:
          type: array
          items:
            type: integer
            title: Fictions gagnantes
          title: Fictions gagnantes
      required:
      - creation_date
      - creation_user
      - description
      - id
      - modification_date
      - modification_user
      - theme
    StaffCategory:
      type: object
      description: Sérialiseur de catégorie pour les modérateurs
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 50
        min_limit:
          type: integer
          title: Minimum
        max_limit:
          type: integer
          nullable: true
          title: Maximum
      required:
      - id
      - min_limit
      - name
    StaffFeatureOrder:
      type: object
      description: Sérialiseur d'ordre de caractéristiques pour les modérateurs
      properties:
        order:
          type: array
          items:
            type: integer
      required:
      - order
    StatusA36Enum:
      enum:
      - 1
      - 2
      - 3
      type: integer
    StatusD1bEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
    TokenObtainPair:
      type: object
      properties:
        nickname:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - nickname
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      description: Sérialiseur d'utilisateur
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        stats:
          allOf:
          - $ref: '#/components/schemas/UserStats'
          readOnly: true
        first_seen:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Première apparition
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Dernière connexion
        banner:
          type: integer
          readOnly: true
      required:
      - banner
      - first_seen
      - id
      - last_login
      - profile
      - stats
      - username
    UserCard:
      type: object
      description: Sérialiseur du lien vers une présentation d'utilisateur
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
      required:
      - id
      - username
    UserLink:
      type: object
      properties:
        display_text:
          type: string
          title: Texte du lien
          maxLength: 50
        link_type_id:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          maxLength: 200
      required:
      - display_text
      - link_type_id
      - url
    UserPreferences:
      type: object
      description: Sérialiseur de préférences d'utilisateur
      properties:
        age_consent:
          type: boolean
          title: Accès au contenu +18 ans
        font:
          type: string
          nullable: true
          title: Police d'écriture
          maxLength: 50
        font_size:
          type: integer
          nullable: true
          title: Taille de police
        line_spacing:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          nullable: true
          title: Taille d'interligne
        dark_mode:
          type: boolean
          nullable: true
          title: Mode sombre
        skin:
          type: string
          title: Thème
          maxLength: 50
        show_reaction:
          type: boolean
          title: Affichage des réactions
        member_review_policy:
          allOf:
          - $ref: '#/components/schemas/MemberReviewPolicyEnum'
          title: Droits des membres
        anonymous_review_policy:
          allOf:
          - $ref: '#/components/schemas/AnonymousReviewPolicyEnum'
          title: Droits des visiteurs
    UserProfile:
      type: object
      description: Sérialiseur de profil d'utilisateur
      properties:
        bio:
          type: string
          title: Biographie
        user_links:
          type: array
          items:
            $ref: '#/components/schemas/UserLink'
          readOnly: true
      required:
      - user_links
    UserStats:
      type: object
      description: Sérialiseur de statistiques d'utilisateur
      properties:
        fiction_count:
          type: string
          readOnly: true
        chapter_count:
          type: string
          readOnly: true
        collection_count:
          type: string
          readOnly: true
        review_count:
          type: string
          readOnly: true
        read_count:
          type: string
          readOnly: true
        word_count:
          type: string
          readOnly: true
        comment_count:
          type: string
          readOnly: true
        review_reply_count:
          type: string
          readOnly: true
        review_drafts_left:
          type: string
          readOnly: true
      required:
      - chapter_count
      - collection_count
      - comment_count
      - fiction_count
      - read_count
      - review_count
      - review_drafts_left
      - review_reply_count
      - word_count
    ValidationStatusEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      type: integer
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
